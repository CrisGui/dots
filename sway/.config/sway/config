include catppuccin-mocha-sway 
### fonts
font pango:JetBrains Mono NL 11

### gaps
default_border none
hide_edge_borders --i3 both
smart_borders off
#smart_gaps on
#gaps inner 3
#gaps outer 0

### Variables
# Logo key. Use Mod1 for Alt.
set $alt Mod1
set $shift Shift
set $ctrl Ctrl
set $entr Return
set $esc Escape
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term kitty
set $multi tmux

set  $menu_shell wofi --show run -p "shell:" -H 95%
set  $menu_apps wofi --show drun -p "app:" -H 95%
#set $menu dmenu_path | wmenu | xargs swaymsg exec --

### Output configuration
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "1:1:AT_Translated_Set_2_keyboard" {
	xkb_layout "es"
}

### Key bindings
# Start a terminal
bindsym $mod+$entr exec $term $multi

# Kill focused window
bindsym $mod+$shift+q kill

# Start your launcher
bindsym $mod+d exec $menu_apps
bindsym $mod+$shift+d exec $menu_shell

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+$shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+$shift+$left move left
bindsym $mod+$shift+$down move down
bindsym $mod+$shift+$up move up
bindsym $mod+$shift+$right move right
bindsym $mod+$shift+Left move left
bindsym $mod+$shift+Down move down
bindsym $mod+$shift+Up move up
bindsym $mod+$shift+Right move right

### Window
# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

set $workspace1 "1: Chrome "
set $workspace2 "2: Files  "
set $workspace3 "3: Music "
set $workspace4 "4: Slack "
set $workspace5 "5: "
set $workspace6 "6: "
set $workspace7 "7: "
set $workspace8 "8: "
set $workspace9 "9: "
set $workspace10 "10: Terminal "

# Switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10
# Move focused container to workspace
bindsym $mod+$shift+1 move container to workspace $workspace1
bindsym $mod+$shift+2 move container to workspace $workspace2
bindsym $mod+$shift+3 move container to workspace $workspace3
bindsym $mod+$shift+4 move container to workspace $workspace4
bindsym $mod+$shift+5 move container to workspace $workspace5
bindsym $mod+$shift+6 move container to workspace $workspace6
bindsym $mod+$shift+7 move container to workspace $workspace7
bindsym $mod+$shift+8 move container to workspace $workspace8
bindsym $mod+$shift+9 move container to workspace $workspace9
bindsym $mod+$shift+0 move container to workspace $workspace10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
#bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+s layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+$shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
#bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad


# Show the next scratchpad window or hide the focused scratchpad window.
bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
	bindsym $left resize shrink width 10px
		bindsym $down resize grow height 10px
		bindsym $up resize shrink height 10px
		bindsym $right resize grow width 10px
		bindsym Left resize shrink width 10px
		bindsym Down resize grow height 10px
		bindsym Up resize shrink height 10px
		bindsym Right resize grow width 10px

# Return to default mode
		bindsym $entr mode "default"
		bindsym $esc mode "default"
}

bindsym $mod+r mode "resize"

# Read `man 5 sway-bar` for more information about this section.
bar {
	position top

# When the status_command prints a new line to stdout, swaybar updates.
# The default just shows the current date and time.
		status_command while echo "$(date +'%Y-%m-%d %X') \
		$(cat /sys/class/power_supply/BAT0/capacity)"; do sleep 1; done

		colors {
			background         $base
				statusline         $text
				focused_statusline $text
				focused_separator  $base
				focused_workspace  $base $base $green
				active_workspace   $base $base $blue
				inactive_workspace $base $base $surface1
				urgent_workspace   $base $base $surface1
				binding_mode       $base $base $surface1
		}
}

include /etc/sway/config.d/*
